name: Container Image CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    name: Compliance Build Workflow
    env:
      GHCR: ghcr.io
      IMAGE_NAME: example-node-webapp
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Scan current project directory with Grype
      id: scan_directory
      uses: anchore/scan-action@v2
      with:
        path: "./"
        fail-build: true
        acs-report-enable: true
        severity-cutoff: critical

    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan_directory.outputs.sarif }}
    
    - name: Build image from Dockerfile
      id: build_image
      run: |
        docker build . \
          --tag="localbuild/$IMAGE_NAME:latest" \
          --tag="$GHCR/$GITHUB_ACTOR/$IMAGE_NAME:latest" \
          --label="org.opencontainers.image.created=$(date +%Y-%m-%d)" \
          --label="org.opencontainers.image.source=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
          --label="org.opencontainers.image.revision=$GITHUB_SHA"
          --label="anchore.stig.profile1=redhat-enterprise-linux-7-stig-baseline"
    
    - name: Inspect image 
      id: inspect_image
      run: docker inspect localbuild/$IMAGE_NAME:latest

    - name: Scan built image with Grype
      id: scan_image
      uses: anchore/scan-action@v2
      with:
        image: "localbuild/$IMAGE_NAME:latest"
        fail-build: false
        severity-cutoff: critical

    - name: Login to GitHub Container Registry
      id: ghcr_login
      uses: docker/login-action@v1
      with:
        registry: $GHCR
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Push image to GitHub Container Registry
      id: ghcr_push
      run: docker push "${GHCR}/${GITHUB_ACTOR}/${IMAGE_NAME}:latest"